name: go
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FILECOIN_FFI_COMMIT: 7912389334e347bbb2eac0520c836830875c39de
      SOLANA_FFI_COMMIT: 720c0143d8655bfcd412ae73c949474df2c1dcf3
    services:
      solana:
        image: renbot/ren-solana:latest
        env:
          DUMMY_MINT_AND_BURN: true
        ports:
          - 8899:8899
      postgres:
        image: postgres:12.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17.13"
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://tok-kkk:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Caching modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-lightnode-${{ hashFiles('**/go.sum') }}

      - name: Cache extern dependencies
        id: cache-extern
        uses: actions/cache@v2
        env:
          cache-name: cache-externs
        with:
          path: .extern
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.FILECOIN_FFI_COMMIT }}-${{ env.SOLANA_FFI_COMMIT }}
      - name: Install dependency packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev pkg-config libudev-dev hwloc libhwloc-dev
      - name: Install dependencies (Filecoin FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          git submodule add https://github.com/filecoin-project/filecoin-ffi.git .extern/filecoin-ffi
          cd .extern/filecoin-ffi
          git checkout ${{ env.FILECOIN_FFI_COMMIT }}
          make
      - name: Replace submodule extern with cached extern
        run: |
          go mod edit -replace=github.com/filecoin-project/filecoin-ffi=./.extern/filecoin-ffi
          go mod edit -replace=github.com/renproject/solana-ffi=./.extern/solana-ffi
      - name: Install dependencies (Solana FFI)
        if: steps.cache-extern.outputs.cache-hit != 'true'
        run: |
          git submodule add https://github.com/renproject/solana-ffi.git .extern/solana-ffi
          go get -u github.com/xlab/c-for-go@cef5ec7
          cd .extern/solana-ffi
          git checkout ${{ env.SOLANA_FFI_COMMIT }}
          make clean
          make
      - name: Get dependencies
        run: |
          set -x
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u github.com/onsi/ginkgo/ginkgo
          go get github.com/onsi/gomega@v1.13.0
          go get -u golang.org/x/lint/golint
          go get -u github.com/loongy/covermerge
          go get -u github.com/mattn/goveralls
          cd $GITHUB_WORKSPACE
          go mod tidy 
          go vet ./...
          golint ./...
      - name: Run tests and report test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          cd $GITHUB_WORKSPACE
          CI=true ginkgo --v --race --cover --coverprofile coverprofile.out ./...
          covermerge                                  \
            cacher/coverprofile.out                   \
            confirmer/coverprofile.out                \
            db/coverprofile.out                       \
            dispatcher/coverprofile.out               \
            http/coverprofile.out                     \
            store/coverprofile.out                    \
            updater/coverprofile.out                  \
            watcher/coverprofile.out                  \
            resolver/coverprofile.out > covermerge.out
          goveralls -coverprofile=covermerge.out -service=github
